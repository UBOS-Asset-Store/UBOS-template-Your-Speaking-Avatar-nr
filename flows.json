[
    {
        "id": "505de08b963b3a23",
        "type": "tab",
        "label": "Flow 1",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "b7ab102cf9517aa7",
        "type": "http in",
        "z": "505de08b963b3a23",
        "name": "",
        "url": "/css",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 100,
        "y": 40,
        "wires": [
            [
                "ec25cd2e1b3a4c03"
            ]
        ]
    },
    {
        "id": "bd563a0724955d05",
        "type": "http response",
        "z": "505de08b963b3a23",
        "name": "",
        "statusCode": "",
        "headers": {
            "content-type": "text/css"
        },
        "x": 430,
        "y": 40,
        "wires": []
    },
    {
        "id": "ec25cd2e1b3a4c03",
        "type": "template",
        "z": "505de08b963b3a23",
        "name": "customCSS",
        "field": "payload",
        "fieldType": "msg",
        "format": "css",
        "syntax": "mustache",
        "template": "::-webkit-scrollbar {\n  width: 0.1px;\n  scrollbar-color: #9bc7f38b;\n}\n.main_container {\n  top:0 !important;\n  left: 0 !important; \n  height: 100vh !important;\n  width: 100% !important;\n  padding: 10px !important;\n}\n\n.main_container>div>div>div>div>div>div>div>div>div>div>div>div>div{\n  display:flex;\n  justify-content: center;\n  align-items: center;\n  gap: 10px;\n}\n\n.main_container>div>div>div>div>div>div>div>div>div>div {\n  height:100% !important; \n}\n.form_container, .answer_container   {\n   position: relative !important;\n    top: 0 !important;\n    left: 0 !important;\n    max-height: 95vh !important;\n  background-image: linear-gradient(180deg, #ffffff 25%, #b0d0f1 100%) !important;\n  padding: 0px !important;\n  border-radius: 10px !important;\n}\n\n.bp3-input, .select-button {\n    border-radius: 5px !important;\n    color: #231F20 !important;\n}\n.select-button span {\n    color: inherit !important;\n}\n\n.generate_btn span{\n    color: #FFFFFF !important;\n}\n.answer_container>div {\n  border-radius: 10px;\n  box-shadow: rgba(0, 0, 0, 0.25) 0px 0px 4px 3px !important;\n}\n.answer_container>div>div>div>div>div>div>div {\n  border-radius: 10px;\n  padding: 7px !important;\n  \n}\n\n.add_btn button:hover {\n  background-color: #52ACFF !important;\n}\n\n.actors_item_container:hover > div > div > div > div > div > div> div > div > div > div > div > div > div > div.delete_avatar_btn button {\n  z-index: 1 !important;\n  opacity: 1 !important;\n}\n\n\n\n/* .form_container .actors_list {\n  height: clamp(170px, 17vw, 270px) !important;\n} */\n\n.actors_list .custom-wrapper-canvas-list{\n  display: flex !important;\n  flex-direction: row !important;\n  justify-content: center !important;\n  align-items: center !important;\n  flex-wrap: wrap !important;\n  \n}\n\n.actors_list .actors_item_container .actor {\n  border: 2px solid #eceff192 !important;\n  border-radius: 50% !important;\n  height: 120px !important;\n  width: 120px !important;\n  padding-left: 0px !important;\n  padding-right: 0px !important;\n  top:0px !important;\n  left:0px !important;\n}\n.actors_list .actors_item_container .actor:hover{\n  border: 2px solid #fa882e !important;\n}\n.actors_list .actors_item_container .selected_actor {\n  border: 2px solid #fa882e !important;\n  border-radius: 50% !important;\n  height: 120px !important;\n  width: 120px !important;\n  padding-left: 0px !important;\n  padding-right: 0px !important;\n \n}\n.actors_list .actor>div>div>div>div>div>div>div {\nborder-radius: 50% !important;\n}\n.actors_list .bp3-icon-plus{\n    display: none !important;\n}\n.actors_list.actors_item_container>div>div>div>div>div>div>div>div>div>div>button{\n    display: none !important;\n}\n\n.form_container .actors_list .actors_item_container{\n    width: 150px !important;\n    height:150px !important;\n}\n.form_container .actors_list .actors_item_container>div>div>div>div>div>div>div>div>div>div>div>div>div{\n    position:relative !important;\n    \n}\n\n",
        "output": "str",
        "x": 270,
        "y": 40,
        "wires": [
            [
                "bd563a0724955d05"
            ]
        ]
    },
    {
        "id": "43bfe33e6a378328",
        "type": "function",
        "z": "505de08b963b3a23",
        "name": "deleteAvatarById",
        "func": "let avatars = global.get('avatars');\n\n// Assuming msg.payload contains the _id of the avatar to mark as deleted\nlet avatarId = msg.payload._id;\n\n// Find the index of the avatar in the array\nlet index = avatars.findIndex(avatar => avatar._id === avatarId);\n\n// If the avatar exists in the array\nif (index !== -1) {\n    // Set deleted to true for the found avatar\n    avatars[index].deleted = true;\n\n    // Update msg.payload to indicate the change\n    msg.payload = {\n        success: true,\n        message: `Avatar with ID ${avatarId} marked as deleted`\n    };\n\n    // Set the updated avatars array back to the global context\n    global.set('avatars', avatars);\n} else {\n    // If the avatar does not exist in the array\n    msg.payload = {\n        success: false,\n        message: `Avatar with ID ${avatarId} not found`\n    };\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "objectid",
                "module": "objectid"
            }
        ],
        "x": 350,
        "y": 320,
        "wires": [
            [
                "6e7b6a07eb0c5dc0",
                "94ca3de04472cdb2"
            ]
        ]
    },
    {
        "id": "a298efd64088f5a0",
        "type": "http in",
        "z": "505de08b963b3a23",
        "name": "",
        "url": "/deleteAvatar",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 128.119140625,
        "y": 318.875,
        "wires": [
            [
                "43bfe33e6a378328"
            ]
        ]
    },
    {
        "id": "6e7b6a07eb0c5dc0",
        "type": "http response",
        "z": "505de08b963b3a23",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 530,
        "y": 320,
        "wires": []
    },
    {
        "id": "b570594b2c92e3c0",
        "type": "http in",
        "z": "505de08b963b3a23",
        "name": "",
        "url": "/uploadAvatar",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 130,
        "y": 180,
        "wires": [
            [
                "f7641d49ab6ba0e4"
            ]
        ]
    },
    {
        "id": "aa1e0752d37c7b39",
        "type": "http response",
        "z": "505de08b963b3a23",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 550,
        "y": 180,
        "wires": []
    },
    {
        "id": "f7641d49ab6ba0e4",
        "type": "function",
        "z": "505de08b963b3a23",
        "name": "create avatar object",
        "func": "\n\nconst thumbnail_url = msg.payload.userUrl;\nlet avatar = { \n    createdAt: Date.now(),\n    presenter_id: objectid(), \n    thumbnail_url,\n    source: \"user\",\n    selected:false,\n    deleted: false };\nlet avatars = global.get(\"avatars\")\navatars.unshift(avatar);\nglobal.set(\"avatars\", avatars);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "objectid",
                "module": "objectid"
            }
        ],
        "x": 360,
        "y": 180,
        "wires": [
            [
                "aa1e0752d37c7b39",
                "9c5aec2349b97259"
            ]
        ]
    },
    {
        "id": "7fe216677821ddd5",
        "type": "http in",
        "z": "505de08b963b3a23",
        "name": "",
        "url": "/getAllAvatars",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 130,
        "y": 260,
        "wires": [
            [
                "6c7d66aa5c729d7b"
            ]
        ]
    },
    {
        "id": "6c7d66aa5c729d7b",
        "type": "function",
        "z": "505de08b963b3a23",
        "name": "sort Avatars",
        "func": "let avatars = global.get('avatars')\n\nlet filteredAvatars = avatars.filter(avatar => avatar.deleted === false);\n\nfilteredAvatars.sort((a, b) => b.createdAt - a.createdAt);\n\nmsg.payload = filteredAvatars;\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 260,
        "wires": [
            [
                "e1a4a227148090a8",
                "23ffb3d4244f7d5e"
            ]
        ]
    },
    {
        "id": "e1a4a227148090a8",
        "type": "http response",
        "z": "505de08b963b3a23",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 490,
        "y": 260,
        "wires": []
    },
    {
        "id": "fdd8a17f7ca948d1",
        "type": "http in",
        "z": "505de08b963b3a23",
        "name": "",
        "url": "/selectAvatar",
        "method": "put",
        "upload": false,
        "swaggerDoc": "",
        "x": 130,
        "y": 380,
        "wires": [
            [
                "44d601641c19f080"
            ]
        ]
    },
    {
        "id": "ed6187075b52d3e1",
        "type": "http response",
        "z": "505de08b963b3a23",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 530,
        "y": 380,
        "wires": []
    },
    {
        "id": "44d601641c19f080",
        "type": "function",
        "z": "505de08b963b3a23",
        "name": "setSelectedTrue",
        "func": "let avatars = global.get('avatars');\n\n// Assuming msg.target contains the _id of the avatar to mark as selected\nlet targetAvatarId = (msg.payload._id).toString();\n\n// Loop through the avatars array\navatars.forEach(avatar => {\n    // Set selected to true only for the target avatar, and false for others\n    avatar.selected = (avatar.presenter_id).toString() === targetAvatarId;\n});\n\n// Update msg.payload to indicate the change\nmsg.payload = {\n    success: true,\n    message: `Avatar with ID ${targetAvatarId} marked as selected, others deselected`\n};\n\n// Set the updated avatars array back to the global context\nglobal.set('avatars', avatars);\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "objectid",
                "module": "objectid"
            }
        ],
        "x": 340,
        "y": 380,
        "wires": [
            [
                "23057f3bd718027a",
                "ed6187075b52d3e1"
            ]
        ]
    },
    {
        "id": "93ace29d77f702db",
        "type": "function",
        "z": "505de08b963b3a23",
        "name": "setSelectedFalse",
        "func": "msg.multi = true;\nmsg.upsert = false;\nmsg.query = {\n    _id: { $ne: objectid(msg.target._id) } // Всі, крім обраного об'єкта\n};\nmsg.payload = {\n    $set: {\n        selected: false\n    }\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "objectid",
                "module": "objectid"
            }
        ],
        "x": 750,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "1774755670398181",
        "type": "function",
        "z": "505de08b963b3a23",
        "name": "generateVideoWithUserAvatar",
        "func": "const BASE_URL = \"https://api.d-id.com/talks\";\nconst content = msg.userData.content;\nconst key = msg.userData.key;\nconst voice = msg.userData.voice;\nconst avatar = msg.payload.thumbnail_url;\n\nmsg.method = 'POST';\nmsg.headers = {\n    'Content-Type': 'application/json',\n    \"accept\": \"application/json\",\n    \"Authorization\": `Basic ${key}`\n};\nmsg.url = `${BASE_URL}`;\nmsg.payload = {\n    \"script\": {\n        \"type\": \"text\",\n        \"provider\": { \"type\": 'elevenlabs', \"voice_id\": voice },\n        \"input\": content\n    },\n    \"config\": { \"result_format\": 'mp4', \"stitch\": true },\n    \"source_url\": avatar,\n    \"webhook\": `${env.get(\"NODEREDURL\")}/webhook`,\n}\nglobal.set('video', '')\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 480,
        "wires": [
            [
                "bf650d82e7a7bc05",
                "ba5d465b29f3fa2d"
            ]
        ]
    },
    {
        "id": "ba5d465b29f3fa2d",
        "type": "http request",
        "z": "505de08b963b3a23",
        "name": "",
        "method": "use",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 990,
        "y": 480,
        "wires": [
            [
                "9064c41b92200575",
                "042fe42819c7d1e4"
            ]
        ]
    },
    {
        "id": "60e758bdcc29e6e9",
        "type": "function",
        "z": "505de08b963b3a23",
        "name": "findAvatar",
        "func": "let avatars = global.get('avatars');\nmsg.userData = msg.payload;\nmsg.response = msg.payload.choices;\n\nlet targetAvatarId = msg.payload.avatar.toString(); \n\n\nlet selectedAvatar = avatars.find(avatar => (avatar.presenter_id).toString() === targetAvatarId);\n\nif (selectedAvatar) {\n    \n    msg.payload = selectedAvatar;\n} else {\n    \n    msg.payload = {\n        error: 'Avatar not found'\n    };\n}\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 500,
        "wires": [
            [
                "3c25ab7e2f53a0b0",
                "5c295483dd3eb7bf"
            ]
        ]
    },
    {
        "id": "abc581cd9b9b870f",
        "type": "function",
        "z": "505de08b963b3a23",
        "name": "generateVideoWithActor",
        "func": "const BASE_URL = \"https://api.d-id.com/clips\";\n\nconst avatar = msg.payload.presenter_id;\nconst content = msg.userData.content;\nconst key = msg.userData.key;\nconst voice = msg.userData.voice;\n\nmsg.method = 'POST';\nmsg.headers = {\n    \"content-type\": 'application/json',\n    \"accept\": \"application/json\",\n    \"Authorization\": `Basic ${key}`\n};\n\nmsg.payload = {\n    \"script\": {\n        \"type\": 'text',\n        \"provider\": { \"type\": 'elevenlabs', \"voice_id\": voice },\n        \"input\": content\n    },\n    \"config\": { \"result_format\": 'mp4' },\n    \"presenter_id\": avatar,\n   \n    \"webhook\": `${env.get(\"NODEREDURL\")}/webhook`,\n    \"background\": {\n        \"color\": \"#ffffff\"\n    }\n}\nmsg.url = `${BASE_URL}`;\nglobal.set('video', '')\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 540,
        "wires": [
            [
                "ae2c17e5036485f5",
                "d5fb326a99a8ce0f"
            ]
        ]
    },
    {
        "id": "d5fb326a99a8ce0f",
        "type": "http request",
        "z": "505de08b963b3a23",
        "name": "",
        "method": "use",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 990,
        "y": 540,
        "wires": [
            [
                "9064c41b92200575",
                "042fe42819c7d1e4"
            ]
        ]
    },
    {
        "id": "3c25ab7e2f53a0b0",
        "type": "switch",
        "z": "505de08b963b3a23",
        "name": "typeOfAvatar",
        "property": "payload.source",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "user",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "d_id",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 510,
        "y": 500,
        "wires": [
            [
                "1774755670398181",
                "90aae4d19aeb4ad7"
            ],
            [
                "abc581cd9b9b870f",
                "e973300ae7a69a28"
            ]
        ]
    },
    {
        "id": "2b1c160de187a01c",
        "type": "http in",
        "z": "505de08b963b3a23",
        "name": "",
        "url": "/webhook",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 120,
        "y": 600,
        "wires": [
            [
                "d41469a92ec47721",
                "10dfc1f2ea4a3590"
            ]
        ]
    },
    {
        "id": "555f3438022890c1",
        "type": "http response",
        "z": "505de08b963b3a23",
        "name": "",
        "statusCode": "",
        "headers": {
            "content-type": "video/mp4"
        },
        "x": 530,
        "y": 600,
        "wires": []
    },
    {
        "id": "d41469a92ec47721",
        "type": "function",
        "z": "505de08b963b3a23",
        "name": "sendVideo",
        "func": "if (msg.payload.status == 'done') {\n  let video = msg.payload.result_url;\n  \n  global.set('video',msg.payload.result_url);\n  msg.payload = video;\n   return msg\n} else {\n  // msg.payload = 'https://d-id-talks-prod.s3.us-west-2.amazonaws.com/google-oauth2%7C102883741232899607695/tlk_Sy0fzUTTpRqh6SjTrxNNt/1709312196561.mp4?AWSAccessKeyId=AKIA5CUMPJBIK65W6FGA&Expires=1709398599&Signature=zY7dpAICRCqTtMCVXDXrgnH101o%3D'\n  msg.payload = null\n  return msg\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 600,
        "wires": [
            [
                "555f3438022890c1",
                "ced94e8df38dc9be"
            ]
        ]
    },
    {
        "id": "9c5aec2349b97259",
        "type": "debug",
        "z": "505de08b963b3a23",
        "name": "debug 1",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 520,
        "y": 140,
        "wires": []
    },
    {
        "id": "94ca3de04472cdb2",
        "type": "debug",
        "z": "505de08b963b3a23",
        "name": "debug 2",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 620,
        "y": 280,
        "wires": []
    },
    {
        "id": "23057f3bd718027a",
        "type": "debug",
        "z": "505de08b963b3a23",
        "name": "debug 3",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 540,
        "y": 420,
        "wires": []
    },
    {
        "id": "23ffb3d4244f7d5e",
        "type": "debug",
        "z": "505de08b963b3a23",
        "name": "debug 4",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 500,
        "y": 220,
        "wires": []
    },
    {
        "id": "9e2c5ec10d494689",
        "type": "inject",
        "z": "505de08b963b3a23",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 120,
        "wires": [
            [
                "f3f0cea32f89e7ca"
            ]
        ]
    },
    {
        "id": "f3f0cea32f89e7ca",
        "type": "function",
        "z": "505de08b963b3a23",
        "name": "set avatars collection",
        "func": "\n\nlet avatars = [\n    {\n        \"_id\": \"6596949f2058da0010fb1a4c\",\n        \"createdAt\": 1704367263765,\n        \"presenter_id\": \"amy-Aq6OmGZnMt\",\n        \"thumbnail_url\": \"https://clips-presenters.d-id.com/amy/Aq6OmGZnMt/Vcq0R4a8F0/thumbnail.png\",\n        \"source\": \"d_id\",\n        \"selected\": false,\n        \"deleted\": false\n    },\n    {\n        \"_id\": \"6596949f2058da0010fb1a4d\",\n        \"createdAt\": 1704367263765,\n        \"presenter_id\": \"amy-FLZ1USJl7m\",\n        \"thumbnail_url\": \"https://clips-presenters.d-id.com/amy/FLZ1USJl7m/vzswgDCwKZ/thumbnail.png\",\n        \"source\": \"d_id\",\n        \"selected\": false,\n        \"deleted\": false\n    },\n    {\n        \"_id\": \"6596949f2058da0010fb1a4e\",\n        \"createdAt\": 1704367263765,\n        \"presenter_id\": \"amy-sEIU0O2gBy\",\n        \"thumbnail_url\": \"https://clips-presenters.d-id.com/amy/sEIU0O2gBy/VrHMAOUSgO/thumbnail.png\",\n        \"source\": \"d_id\",\n        \"selected\": false,\n        \"deleted\": false\n    },\n    {\n        \"_id\": \"6596949f2058da0010fb1a4f\",\n        \"createdAt\": 1704367263765,\n        \"presenter_id\": \"anita-6_uTzyZtNR\",\n        \"thumbnail_url\": \"https://clips-presenters.d-id.com/anita/6_uTzyZtNR/vxfRIwlzuf/thumbnail.png\",\n        \"source\": \"d_id\",\n        \"selected\": false,\n        \"deleted\": false\n    },\n    {\n        \"_id\": \"6596949f2058da0010fb1a50\",\n        \"createdAt\": 1704367263765,\n        \"presenter_id\": \"alyssa-z1fn0H3BfK\",\n        \"thumbnail_url\": \"https://clips-presenters.d-id.com/alyssa/z1fn0H3BfK/bSMgcAjT2R/thumbnail.png\",\n        \"source\": \"d_id\",\n        \"selected\": false,\n        \"deleted\": false\n    },\n    {\n        \"_id\": \"6596949f2058da0010fb1a51\",\n        \"createdAt\": 1704367263765,\n        \"presenter_id\": \"arran-E2OXQyzs_r\",\n        \"thumbnail_url\": \"https://clips-presenters.d-id.com/arran/E2OXQyzs_r/PaHFW_LIWB/thumbnail.png\",\n        \"source\": \"d_id\",\n        \"selected\": false,\n        \"deleted\": false\n    },\n    {\n        \"_id\": \"6596949f2058da0010fb1a52\",\n        \"createdAt\": 1704367263765,\n        \"presenter_id\": \"anita-H_MdjUsV3A\",\n        \"thumbnail_url\": \"https://clips-presenters.d-id.com/anita/H_MdjUsV3A/7PLEdMIW1s/thumbnail.png\",\n        \"source\": \"d_id\",\n        \"selected\": false,\n        \"deleted\": false\n    },\n    {\n        \"_id\": \"6596949f2058da0010fb1a53\",\n        \"createdAt\": 1704367263765,\n        \"presenter_id\": \"anita-UcOoVxD59H\",\n        \"thumbnail_url\": \"https://clips-presenters.d-id.com/anita/UcOoVxD59H/fET_ZHqVWj/thumbnail.png\",\n        \"source\": \"d_id\",\n        \"selected\": false,\n        \"deleted\": false\n    },\n    {\n        \"_id\": \"6596949f2058da0010fb1a54\",\n        \"createdAt\": 1704367263765,\n        \"presenter_id\": \"alyssa-Kpjhh2J_rm\",\n        \"thumbnail_url\": \"https://clips-presenters.d-id.com/alyssa/Kpjhh2J_rm/Oa9TBDfWdE/thumbnail.png\",\n        \"source\": \"d_id\",\n        \"selected\": false,\n        \"deleted\": false\n    },\n    {\n        \"_id\": \"6596949f2058da0010fb1a55\",\n        \"createdAt\": 1704367263765,\n        \"presenter_id\": \"arran-esvIrjCjq5\",\n        \"thumbnail_url\": \"https://clips-presenters.d-id.com/arran/esvIrjCjq5/JgPcOxkQeq/thumbnail.png\",\n        \"source\": \"d_id\",\n        \"selected\": false,\n        \"deleted\": false\n    },\n    {\n        \"_id\": \"6596949f2058da0010fb1a56\",\n        \"createdAt\": 1704367263765,\n        \"presenter_id\": \"alex-qcVo4GUPOY\",\n        \"thumbnail_url\": \"https://clips-presenters.d-id.com/alex/qcVo4GUPOY/Zn2tuAWme0/thumbnail.png\",\n        \"source\": \"d_id\",\n        \"selected\": false,\n        \"deleted\": false\n    },\n    {\n        \"_id\": \"6596949f2058da0010fb1a57\",\n        \"createdAt\": 1704367263765,\n        \"presenter_id\": \"diana-Ir0x9WlpT4\",\n        \"thumbnail_url\": \"https://clips-presenters.d-id.com/diana/Ir0x9WlpT4/uJX_BBmeQ4/thumbnail.png\",\n        \"source\": \"d_id\",\n        \"selected\": false,\n        \"deleted\": false\n    },\n    {\n        \"_id\": \"6596949f2058da0010fb1a58\",\n        \"createdAt\": 1704367263765,\n        \"presenter_id\": \"alex-Wzfu0JN6HJ\",\n        \"thumbnail_url\": \"https://clips-presenters.d-id.com/alex/Wzfu0JN6HJ/KwxpJTxq1b/thumbnail.png\",\n        \"source\": \"d_id\",\n        \"selected\": false,\n        \"deleted\": false\n    },\n    {\n        \"_id\": \"6596949f2058da0010fb1a59\",\n        \"createdAt\": 1704367263765,\n        \"presenter_id\": \"alex-tv2VbI8lXI\",\n        \"thumbnail_url\": \"https://clips-presenters.d-id.com/alex/tv2VbI8lXI/MeDU8rVHxW/thumbnail.png\",\n        \"source\": \"d_id\",\n        \"selected\": false,\n        \"deleted\": false\n    },\n    {\n        \"_id\": \"6596949f2058da0010fb1a5a\",\n        \"createdAt\": 1704367263765,\n        \"presenter_id\": \"alyssa-fIa7P15FTv\",\n        \"thumbnail_url\": \"https://clips-presenters.d-id.com/alyssa/fIa7P15FTv/PWEobsgYC8/thumbnail.png\",\n        \"source\": \"d_id\",\n        \"selected\": false,\n        \"deleted\": false\n    }\n]\n\nglobal.set(\"avatars\", avatars);\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "2a70449e6388c54b",
        "type": "http in",
        "z": "505de08b963b3a23",
        "name": "",
        "url": "/generateVideo",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 140,
        "y": 500,
        "wires": [
            [
                "60e758bdcc29e6e9"
            ]
        ]
    },
    {
        "id": "ced94e8df38dc9be",
        "type": "debug",
        "z": "505de08b963b3a23",
        "name": "debug 5",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 540,
        "y": 680,
        "wires": []
    },
    {
        "id": "5c295483dd3eb7bf",
        "type": "debug",
        "z": "505de08b963b3a23",
        "name": "debug 6",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 380,
        "y": 460,
        "wires": []
    },
    {
        "id": "90aae4d19aeb4ad7",
        "type": "debug",
        "z": "505de08b963b3a23",
        "name": "debug 7",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 760,
        "y": 440,
        "wires": []
    },
    {
        "id": "e973300ae7a69a28",
        "type": "debug",
        "z": "505de08b963b3a23",
        "name": "debug 8",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 720,
        "y": 600,
        "wires": []
    },
    {
        "id": "bf650d82e7a7bc05",
        "type": "debug",
        "z": "505de08b963b3a23",
        "name": "debug 9",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 980,
        "y": 420,
        "wires": []
    },
    {
        "id": "ae2c17e5036485f5",
        "type": "debug",
        "z": "505de08b963b3a23",
        "name": "debug 10",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 980,
        "y": 580,
        "wires": []
    },
    {
        "id": "c4fb00965cc02703",
        "type": "http in",
        "z": "505de08b963b3a23",
        "name": "",
        "url": "/download",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 140,
        "y": 780,
        "wires": [
            [
                "7a40195f3eab5349",
                "b86062ce186e0e31"
            ]
        ]
    },
    {
        "id": "7a40195f3eab5349",
        "type": "function",
        "z": "505de08b963b3a23",
        "name": "download",
        "func": "msg.url = global.get('video');\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 780,
        "wires": [
            [
                "d29319c6cd4c5e71",
                "9a4e91052d8ad0fe"
            ]
        ]
    },
    {
        "id": "9a4e91052d8ad0fe",
        "type": "http request",
        "z": "505de08b963b3a23",
        "name": "",
        "method": "GET",
        "ret": "bin",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 490,
        "y": 780,
        "wires": [
            [
                "591ba8033a63b728",
                "bc2b13e47e8986bb"
            ]
        ]
    },
    {
        "id": "9e81929266e7566d",
        "type": "http response",
        "z": "505de08b963b3a23",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 870,
        "y": 780,
        "wires": []
    },
    {
        "id": "bc2b13e47e8986bb",
        "type": "function",
        "z": "505de08b963b3a23",
        "name": "convert to mp4",
        "func": "msg.headers = {\n    \"Content-Disposition\": \"attachment\",\n    'Content-Type': 'video/mp4'\n};\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 680,
        "y": 780,
        "wires": [
            [
                "c3fc76214cee2a61",
                "9e81929266e7566d"
            ]
        ]
    },
    {
        "id": "b86062ce186e0e31",
        "type": "debug",
        "z": "505de08b963b3a23",
        "name": "debug11",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 160,
        "y": 840,
        "wires": []
    },
    {
        "id": "d29319c6cd4c5e71",
        "type": "debug",
        "z": "505de08b963b3a23",
        "name": "debug 12",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 360,
        "y": 840,
        "wires": []
    },
    {
        "id": "591ba8033a63b728",
        "type": "debug",
        "z": "505de08b963b3a23",
        "name": "debug 13",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 520,
        "y": 840,
        "wires": []
    },
    {
        "id": "c3fc76214cee2a61",
        "type": "debug",
        "z": "505de08b963b3a23",
        "name": "debug 14",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 720,
        "y": 840,
        "wires": []
    },
    {
        "id": "10dfc1f2ea4a3590",
        "type": "debug",
        "z": "505de08b963b3a23",
        "name": "debug 15",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 200,
        "y": 680,
        "wires": []
    },
    {
        "id": "9064c41b92200575",
        "type": "debug",
        "z": "505de08b963b3a23",
        "name": "debug 16",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1160,
        "y": 500,
        "wires": []
    },
    {
        "id": "042fe42819c7d1e4",
        "type": "http response",
        "z": "505de08b963b3a23",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1130,
        "y": 420,
        "wires": []
    }
]